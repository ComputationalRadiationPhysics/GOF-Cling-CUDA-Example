BootStrap: docker
From: nvidia/cuda:8.0-devel-ubuntu16.04
%post
    . /.singularity.d/env/10-docker*.sh

%environment
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64
%post
    export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        gdb \
        git \
        locales \
        locales-all \
        pkg-config \
        python \
        uuid-dev \
        wget
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    locale-gen en_US.UTF-8
    update-locale LANG=en_US.UTF-8

# CMake version 3.15.2
%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        wget
    rm -rf /var/lib/apt/lists/*
%post
    cd /
    mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.15/cmake-3.15.2-Linux-x86_64.sh
    /bin/sh /var/tmp/cmake-3.15.2-Linux-x86_64.sh --prefix=/usr/local --skip-license
    rm -rf /var/tmp/cmake-3.15.2-Linux-x86_64.sh

%post
    cd /
    mkdir -p /tmp/GOL_example/cling_src && cd /tmp/GOL_example/cling_src && git clone --depth=1 --branch cling-patches http://root.cern.ch/git/llvm.git llvm && cd -
    mkdir -p /tmp/GOL_example/cling_src/llvm/tools && cd /tmp/GOL_example/cling_src/llvm/tools && git clone --depth=1 --branch cling-patches http://root.cern.ch/git/clang.git clang && cd -
    mkdir -p /tmp/GOL_example/cling_src/llvm/tools && cd /tmp/GOL_example/cling_src/llvm/tools && git clone --depth=1 --branch test_release https://github.com/SimeonEhrig/cling.git cling && cd -
    mkdir -p /tmp/GOL_example/cling_build && cd /tmp/GOL_example/cling_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE -DLLVM_ABI_BREAKING_CHECKS="FORCE_OFF" -DCMAKE_LINKER=/usr/bin/gold -DLLVM_ENABLE_RTTI=ON /tmp/GOL_example/cling_src/llvm
    cmake --build /tmp/GOL_example/cling_build --target install -- -j14

%post
    cd /
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch v4.2.5 https://github.com/zeromq/libzmq.git libzmq && cd -
    mkdir -p /tmp/GOL_example/libzmq_build && cd /tmp/GOL_example/libzmq_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DWITH_PERF_TOOL=OFF -DZMQ_BUILD_TESTS=OFF -DENABLE_CPACK=OFF -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/libzmq
    cmake --build /tmp/GOL_example/libzmq_build --target install -- -j14
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch v4.3.0 https://github.com/zeromq/cppzmq.git cppzmq && cd -
    mkdir -p /tmp/GOL_example/cppzmq_build && cd /tmp/GOL_example/cppzmq_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/cppzmq
    cmake --build /tmp/GOL_example/cppzmq_build --target install -- -j14
    mkdir -p /tmp/GOL_example && wget -q -nc --no-check-certificate -P /tmp/GOL_example https://www.openssl.org/source/openssl-1.1.1c.tar.gz
    mkdir -p /tmp/GOL_example && tar -x -f /tmp/GOL_example/openssl-1.1.1c.tar.gz -C /tmp/GOL_example -z
    cd /tmp/GOL_example/openssl-1.1.1c
    ./config
    make -j14
    make install -j14
    cd -
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch v3.3.0 https://github.com/nlohmann/json.git nlohmann_json && cd -
    mkdir -p /tmp/GOL_example/nlohmann_json_build && cd /tmp/GOL_example/nlohmann_json_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/nlohmann_json
    cmake --build /tmp/GOL_example/nlohmann_json_build --target install -- -j14
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch 0.6.5 https://github.com/QuantStack/xtl.git xtl && cd -
    mkdir -p /tmp/GOL_example/xtl_build && cd /tmp/GOL_example/xtl_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/xtl
    cmake --build /tmp/GOL_example/xtl_build --target install -- -j14
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch 0.20.0 https://github.com/QuantStack/xeus.git xeus && cd -
    mkdir -p /tmp/GOL_example/xeus_build && cd /tmp/GOL_example/xeus_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_EXAMPLES=OFF -DDISABLE_ARCH_NATIVE=ON -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/xeus
    cmake --build /tmp/GOL_example/xeus_build --target install -- -j14

%post
    cd /
    mkdir -p /run/user
    chmod 777 /run/user

%post
    cd /
    cd /tmp/GOL_example
    wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
    chmod u+x Miniconda3-latest-Linux-x86_64.sh
    ./Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3
    /opt/miniconda3/bin/conda install -y jupyter
    /opt/miniconda3/bin/conda install -y -c conda-forge jupyterlab
    /opt/miniconda3/bin/conda install -y -c biobuilds libuuid
    cd -

%environment
    export PATH=$PATH:/opt/miniconda3/bin/
%post
    export PATH=$PATH:/opt/miniconda3/bin/

%post
    cd /
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch v1.8.1 https://github.com/zeux/pugixml.git pugixml && cd -
    mkdir -p /tmp/GOL_example/pugixml_build && cd /tmp/GOL_example/pugixml_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_POSITION_INDEPENDENT_CODE=ON /tmp/GOL_example/pugixml
    cmake --build /tmp/GOL_example/pugixml_build --target install -- -j14
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch v2.1.1 https://github.com/jarro2783/cxxopts.git cxxopts && cd -
    mkdir -p /tmp/GOL_example/cxxopts_build && cd /tmp/GOL_example/cxxopts_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=RELEASE /tmp/GOL_example/cxxopts
    cmake --build /tmp/GOL_example/cxxopts_build --target install -- -j14
    mkdir -p /tmp/GOL_example && cd /tmp/GOL_example && git clone --depth=1 --branch 0.6.0 https://github.com/QuantStack/xeus-cling.git xeus-cling && cd -
    mkdir -p /tmp/GOL_example/xeus-cling_build && cd /tmp/GOL_example/xeus-cling_build && cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_INSTALL_PREFIX=/opt/miniconda3/ -DCMAKE_INSTALL_LIBDIR=/opt/miniconda3/lib -DCMAKE_LINKER=/usr/bin/gold -DCMAKE_BUILD_TYPE=RELEASE -DDISABLE_ARCH_NATIVE=ON /tmp/GOL_example/xeus-cling
    cmake --build /tmp/GOL_example/xeus-cling_build --target install -- -j14

%post
    cd /
    mkdir -p /tmp/GOL_example/xeus-cling-cpp11-cuda
    echo '{"display_name": "C++11-CUDA", "argv": ["/opt/miniconda3/bin/xcpp", "-f", "{connection_file}", "-std=c++11", "-xcuda"], "language": "C++11"}' > /tmp/GOL_example/xeus-cling-cpp11-cuda/kernel.json
    jupyter-kernelspec install /tmp/GOL_example/xeus-cling-cpp11-cuda
    mkdir -p /tmp/GOL_example/xeus-cling-cpp14-cuda
    echo '{"display_name": "C++14-CUDA", "argv": ["/opt/miniconda3/bin/xcpp", "-f", "{connection_file}", "-std=c++14", "-xcuda"], "language": "C++14"}' > /tmp/GOL_example/xeus-cling-cpp14-cuda/kernel.json
    jupyter-kernelspec install /tmp/GOL_example/xeus-cling-cpp14-cuda
    mkdir -p /tmp/GOL_example/xeus-cling-cpp17-cuda
    echo '{"display_name": "C++17-CUDA", "argv": ["/opt/miniconda3/bin/xcpp", "-f", "{connection_file}", "-std=c++17", "-xcuda"], "language": "C++17"}' > /tmp/GOL_example/xeus-cling-cpp17-cuda/kernel.json
    jupyter-kernelspec install /tmp/GOL_example/xeus-cling-cpp17-cuda



%files
    notebook /

%files
    pngwriter /opt

%post
    apt-get update -y
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        libpng-dev
    rm -rf /var/lib/apt/lists/*

%post
    cd /
    mkdir -p /opt/pngwriter/build && cd /opt/pngwriter/build && cmake -DCMAKE_INSTALL_PREFIX=/notebook/pngwriter -DBUILD_SHARED_LIBS=ON /opt/pngwriter
    cmake --build /opt/pngwriter/build --target install -- -j$(nproc)
    rm -rf /opt/pngwriter

%runscript
    if [ ! -d /tmp/GOL-xeus-cling-cuda ]; then 
 mkdir /tmp/GOL-xeus-cling-cuda && cp -r /notebook/ /tmp/GOL-xeus-cling-cuda
 fi
    cd /tmp/GOL-xeus-cling-cuda/notebook
    exec jupyter-lab
